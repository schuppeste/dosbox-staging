name: Code analysis
on: push

jobs:

  run_linters:
    name: Script linters
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - run:  sudo apt-get update
      - name: Install pylint
        run:  |
          sudo apt-get install python3-setuptools
          sudo pip3 install pylint beautifulsoup4 html5lib
      - name: Run pylint
        run:  ./scripts/verify-python.sh
      - name: Run shellcheck
        run:  ./scripts/verify-bash.sh

  build_clang_static_analyser:
    name: Clang static analyzer
    runs-on: ubuntu-18.04
    needs: run_linters
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - run:  sudo apt-get update
      - name: Install C++ compiler and libraries
        run:  sudo apt-get install python3-setuptools $(./scripts/list-build-dependencies.sh -m apt -c gcc)
      - name: Install scan-build (Python version)
        run:  sudo pip3 install scan-build beautifulsoup4 html5lib
      - name: Log environment
        run:  ./scripts/log-env.sh
      - name: Build
        run:  |
          # build steps
          set -x
          g++ --version
          ./autogen.sh
          ./configure
          intercept-build make -j "$(nproc)"
      - name: Analyze
        run:  analyze-build -v -o report --html-title="dosbox-staging (${GITHUB_SHA:0:8})"
      - name: Upload report
        uses: actions/upload-artifact@master
        with:
          name: report
          path: report
      - name: Summarize report
        env:
          MAX_BUGS: 76
        run: |
          # summary
          echo "Full report is included in build Artifacts"
          echo
          ./scripts/count-bugs.py report/*/index.html

  dynamic_matrix:
    name: ${{ matrix.compiler }} dynamic sanitizers
    needs: run_linters
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [Clang, GCC]
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - run:  sudo apt-get update
      - name: Install C++ compiler and libraries
        env:
          VERSION_GCC: 9
          VERSION_Clang: 8
        run:  >
          sudo apt-get install -y $(./scripts/list-build-dependencies.sh -m apt
          -c ${{ matrix.compiler }} -v $VERSION_${{ matrix.compiler }})
      - name: Log environment
        run:  ./scripts/log-env.sh
      - name: Build and run sanitizers
        env:
          VERSION_GCC: 9
          VERSION_Clang: 8
          SANITIZERS_GCC: UASAN USAN TSAN
          SANITIZERS_Clang: USAN MSAN
        run: |
          ./.github/scripts/build-and-run-sanitizers.sh \
          ${{ matrix.compiler }} \
          $VERSION_${{ matrix.compiler }} \
          $SANITIZERS_${{ matrix.compiler }}
      - name: Upload logs
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.compiler }}-logs
          path: ${{ matrix.compiler }}-logs

  code_coverage:
    name: Test coverage
    runs-on: ubuntu-latest
    needs: run_linters
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Install dependencies
        run:  |
          sudo apt-get update -q
          echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope
          sudo apt-get -q -y install \
          $(./scripts/list-build-dependencies.sh -m apt -c gcc -v 7) \
          zstd python3-setuptools parallel pulseaudio alsa-utils dbus-x11 lcov
          sudo pip3 install gdown cpp-coveralls
      - name: Build
        run:  ./scripts/build.sh -c gcc -v 7 -t coverage
      - name: Setup test-cases
        run:  ./scripts/setup-tests.sh
      - name: Run tests
        run:  xvfb-run -s "-screen 0 640x480x24" ./scripts/run-tests.sh
      - name: Generate report
        run:  ./scripts/generate-coverage-report.sh gcov-7
      - name: Upload report
        uses: actions/upload-artifact@master
        with:
          name: coverage-report
          path: coverage-report
      - name: Push to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CodecovToken }}
        run:  bash <(curl -s https://codecov.io/bash) -x gcov-7 -Z

